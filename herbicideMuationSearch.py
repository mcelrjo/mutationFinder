
'''Searches sequences to determine if specific herbicide mutations are present.
'''

from Bio.Seq import Seq
from Bio import pairwise2
import re

class resistanceMutationSearch(object):
    
    def __init__(self, sequence, targetSite):
        
        self.sequence = sequence
        
        self.targetSite = targetSite
           
        
    def determineTarget(self):
        '''
        SELF.resSegments is a LIST of possible mutation sites with specific 
        '''
        if self.targetSite == 'ALS':
            self.segments = ['MVVQ', 'ELDQQ', 'PENES']
            self.susSegments = ['GGASM', 'QVPR', 'TDAF','FDDR','QWED', 'PSGG']
            self.resSegments = {'GGASM':'GG\wSM','QVPR':'QV\wR','TDAF':'TD\wF', 'FDDR':'FD\wR',"QWED":"Q\wED", 'PSGG':'P\w\wG'}
            self.compDNA = 'GCCACAGCCACAGCCACGTCCACAGCCGTCGCCATCTCGGGCGCCACCTCCGCCCTACCCAAACCCACCC\
TCCCGCGCCACCTGCCCGCCCCACGCCGCGCCGCCCTCGCCGCCGCCACCCGCATCAGGTGCTCCACGGT\
GTCCCCTTCGCCCGCCCCTCCCGCCACCGCGCTCCGCCCATGGGGCCCCACCGAGCCCCGCAAGGGCGCC\
GACATCCTCGTCGAGGCCCTGGAGCGCTGCGGCATCAGCGACGTCTTCGCCTACCCCGGCGGCGCCTCGA\
TGGAGATCCACCAGGCGCTCACGCGCTCGCCGGCCATCACCAACCACCTCTTCCGGCACGAGCAGGGGGA\
GGCGTTCGCCGCGTCCGGGTACGCCCGCGCCTCCGGCCGCGTCGGGGTCTGCGTCGCCACCTCCGGCCCC\
GGCGCCACCAACCTCGTCTCCGCGCTCGCCGACGCTCTGCTCGACTCCATCCCGATGGTCGCCATCACGG\
GGCAGGTCCCGCGCCGCATGATCGGCACGGACGCCTTCCAGGAGACGCCGATTGTGGAGGTCACCCGTTC\
CATCACCAAGCACAATTACCTGGTCCTTGACGTGGAGGACATCCCCCGCGTCATTCAGGAAGCCTTCTTC\
CTCGCCTCCTCCGGCCGGCCGGGGCCGGTGCTGGTCGACATCCCCAAGGACATCCAGCAGCAGATGGCCG\
TGCCTGTCTGGGACGCGCCAATGAGTCTGCCAGGGTACATTGCTCGCCTCCCTAAGCCGCCGGCTACCGA\
ATTGCTTGAGCAGGTCCTGCGTCTGGTTGGTGAGGCTCGGCGCCCAATTCTGTATGTTGGTGGTGGCTGC\
TCTGCGTCCGGCGAGGAGTTGCGCCGCTTTGTTGAGCTCACTGGGATCCCAGTGACAACTACCCTCATGG\
GTCTTGGCAACTTCCCCAGCGATGACCCACTGTCTCTGCGTATGCTTGGGATGCATGGTACAGTCTACGC\
CAATTACGCGGTAGATAAGGCTGACCTGCTGCTTGCATTTGGTGTGCGGTTTGATGACCGTGTGACTGGA\
AAAATAGAGGCTTTTGCAAGCAGGTCCAAGATTGTGCACATTGACATTGATCCAGCTGAGATTGGCAAGA\
ACAAGCAGCCACACGTCTCCATTTGTGCAGATGTCAAGATCGCTTTGGAGGGCTTGAATTCTCTTCTGCT\
AAATGGGAGCAAAACACACAAGAGTTTAGATTTTAGTTCGTGGCATGAGGAGTTGGACCAGCAGAAGAGG\
GAGTTTCCTCTGGGATTCAAAACTTTTGGTGAGGCGATCCCACCACAATATGCTATCCAGGTACTGGATG\
AGCTGACCAAAGGGGAGGCGATCATTGCCACTGGTGTTGGGCAGCACCAGATGTGGGCGGCTCAGTATTA\
CACGTACAAGCGGCCACGTCAGTGGCTGTCTTCGGCTGGTCTTGGAGCAATGGGGTTTGGGTTGCCAGCT\
GCAGCTGGTGCTGCTGTGGCCAACCCAGGTGTCACAGTTGTTGACATTGATGGAGATGGTAGCTTCCTCA\
TGAATATTCAGGAGTTGGCACTGATTCGTATTGAGAACCTCCCTGTTAAGGTGATGATACTGAACAACCA\
ACATCTGGGAATGGTGGTGCAGTGGGAGGACAGGTTTTACAAGGCCAATCGGGCGCACACGTACCTTGGG\
AACCCAGAAAATGAGAGTGAGATATATCCAGATTTTGTGACGATTGCCAAGGGGTTCAATGTTCCTGCTG\
TTCGTGTGACAAAGAAAAGTGAAGTCCGTGCAGCAATCAAGAAGATGCTTGAGACTCCAGGGCCATACTT\
GTTGGATATCATCGTCCCTCACCAGGAGCATGTGCTGCCTATGATCCCCAGCGGTGGTGCTTTCAAGGAC\
ATTATCATGGAGGGCGATGGCA'
            self.compProt = 'MATATATSTAVAISGATSALPKPTLPRHLPAPRRAALAAATRIRC\
STVSPSPAPPATALRPWGPTEPRKGADILVEALERCGISDVFAYPGGASMEIHQALTR\
SPAITNHLFRHEQGEAFAASGYARASGRVGVCVATSGPGATNLVSALADALLDSIPMV\
AITGQVPRRMIGTDAFQETPIVEVTRSITKHNYLVLDVEDIPRVIQEAFFLASSGRPG\
PVLVDIPKDIQQQMAVPVWDAPMSLPGYIARLPKPPATELLEQVLRLVGEARRPILYV\
GGGCSASGEELRRFVELTGIPVTTTLMGLGNFPSDDPLSLRMLGMHGTVYANYAVDKA\
DLLLAFGVRFDDRVTGKIEAFASRSKIVHIDIDPAEIGKNKQPHVSICADVKIALEGL\
NSLLLNGSKTHKSLDFSSWHEELDQQKREFPLGFKTFGEAIPPQYAIQVLDELTKGEA\
IIATGVGQHQMWAAQYYTYKRPRQWLSSAGLGAMGFGLPAAAGAAVANPGVTVVDIDG\
DGSFLMNIQELALIRIENLPVKVMILNNQHLGMVVQWEDRFYKANRAHTYLGNPENES\
EIYPDFVTIAKGFNVPAVRVTKKSEVRAAIKKMLETPGPYLLDIIVPHQEHVLPMIPSGGAFKDIIMEGD'
            self.testAccession = 'KM388812'
        if self.targetSite == "ACCase":
            self.segments = ["VENIH", "GQVWFP", "LANWRG", "LFEGILQ", "IDSKIN", "TAKGN"]
            self.susSegments = ["VENIH", "GQVWFP", "LANWRG", "LFEGILQ", "IDSKIN", "RTAKGN"]
            self.resSegments = {"VENIH":"VEN\wH", "GQVWFP":"GQV\wFP", "LANWRG":"LAN\wRG", "LFEGILQ":"LFEG\wLQ", "IDSKIN":"I\wSKIN", "TAKGN":"TAK\wN"}
            self.compDNA = 'GCCACAGCCACAGCCACGTCCACAGCCGTCGCCATCTCGGGCGCCACCTCCGCCCTACCCAAACCCACCC\
TCCCGCGCCACCTGCCCGCCCCACGCCGCGCCGCCCTCGCCGCCGCCACCCGCATCAGGTGCTCCACGGT\
GTCCCCTTCGCCCGCCCCTCCCGCCACCGCGCTCCGCCCATGGGGCCCCACCGAGCCCCGCAAGGGCGCC\
GACATCCTCGTCGAGGCCCTGGAGCGCTGCGGCATCAGCGACGTCTTCGCCTACCCCGGCGGCGCCTCGA\
TGGAGATCCACCAGGCGCTCACGCGCTCGCCGGCCATCACCAACCACCTCTTCCGGCACGAGCAGGGGGA\
GGCGTTCGCCGCGTCCGGGTACGCCCGCGCCTCCGGCCGCGTCGGGGTCTGCGTCGCCACCTCCGGCCCC\
GGCGCCACCAACCTCGTCTCCGCGCTCGCCGACGCTCTGCTCGACTCCATCCCGATGGTCGCCATCACGG\
GGCAGGTCCCGCGCCGCATGATCGGCACGGACGCCTTCCAGGAGACGCCGATTGTGGAGGTCACCCGTTC\
CATCACCAAGCACAATTACCTGGTCCTTGACGTGGAGGACATCCCCCGCGTCATTCAGGAAGCCTTCTTC\
CTCGCCTCCTCCGGCCGGCCGGGGCCGGTGCTGGTCGACATCCCCAAGGACATCCAGCAGCAGATGGCCG\
TGCCTGTCTGGGACGCGCCAATGAGTCTGCCAGGGTACATTGCTCGCCTCCCTAAGCCGCCGGCTACCGA\
ATTGCTTGAGCAGGTCCTGCGTCTGGTTGGTGAGGCTCGGCGCCCAATTCTGTATGTTGGTGGTGGCTGC\
TCTGCGTCCGGCGAGGAGTTGCGCCGCTTTGTTGAGCTCACTGGGATCCCAGTGACAACTACCCTCATGG\
GTCTTGGCAACTTCCCCAGCGATGACCCACTGTCTCTGCGTATGCTTGGGATGCATGGTACAGTCTACGC\
CAATTACGCGGTAGATAAGGCTGACCTGCTGCTTGCATTTGGTGTGCGGTTTGATGACCGTGTGACTGGA\
AAAATAGAGGCTTTTGCAAGCAGGTCCAAGATTGTGCACATTGACATTGATCCAGCTGAGATTGGCAAGA\
ACAAGCAGCCACACGTCTCCATTTGTGCAGATGTCAAGATCGCTTTGGAGGGCTTGAATTCTCTTCTGCT\
AAATGGGAGCAAAACACACAAGAGTTTAGATTTTAGTTCGTGGCATGAGGAGTTGGACCAGCAGAAGAGG\
GAGTTTCCTCTGGGATTCAAAACTTTTGGTGAGGCGATCCCACCACAATATGCTATCCAGGTACTGGATG\
AGCTGACCAAAGGGGAGGCGATCATTGCCACTGGTGTTGGGCAGCACCAGATGTGGGCGGCTCAGTATTA\
CACGTACAAGCGGCCACGTCAGTGGCTGTCTTCGGCTGGTCTTGGAGCAATGGGGTTTGGGTTGCCAGCT\
GCAGCTGGTGCTGCTGTGGCCAACCCAGGTGTCACAGTTGTTGACATTGATGGAGATGGTAGCTTCCTCA\
TGAATATTCAGGAGTTGGCACTGATTCGTATTGAGAACCTCCCTGTTAAGGTGATGATACTGAACAACCA\
ACATCTGGGAATGGTGGTGCAGTGGGAGGACAGGTTTTACAAGGCCAATCGGGCGCACACGTACCTTGGG\
AACCCAGAAAATGAGAGTGAGATATATCCAGATTTTGTGACGATTGCCAAGGGGTTCAATGTTCCTGCTG\
TTCGTGTGACAAAGAAAAGTGAAGTCCGTGCAGCAATCAAGAAGATGCTTGAGACTCCAGGGCCATACTT\
GTTGGATATCATCGTCCCTCACCAGGAGCATGTGCTGCCTATGATCCCCAGCGGTGGTGCTTTCAAGGAC\
ATTATCATGGAGGGCGATGGCA'
            self.compProt = 'NPERGFKYIYLNEEDYGRISSSVIAHKTQLDSGEIRWVIDSVVG\
KEDGLGVENIHGSAAIASAYSRAYEETFTLTFVSGRTVGIGAYLARLGIRCIQRIDQP\
IILTGFSALNKLLGREVYSSHMQLGGPKIMATNGVVHLTVPDDLEGVSNILRWLSYVP\
ANIGGPLPITKSLDPIDRPVAYIPENTCDPRAAISGIXDXQGKWLGGMFDKDSFVETF\
EGWAKTVVTGRAKLGGIPVGVIAVETQTMMQLVPADPGQPDSHERSVPRAGQVWFPDS\
ATKTAQAMLDFNREGLPLFILANWRGFSGGQRDLFEGILQAGSTIVENLRTYNQPAFV\
YIPKAAELRGGAWVVIDSKINPDRIECYAETTAKGNVLEPQGLIEIKFRSEXLQDCMD\
RLDPELVNLKAKLQGAKHEN'
            self.testAccession = 'KJ606972'
        if self.targetSite == "psbA":
            self.segments = ['GSLV', 'QYAS','RETTENES']
            self.susSegments = ['GSLV', 'QYAS']
            self.resSegments = {'GSLV': 'GSL\w', 'QYAS':'QYA\w'} # V and S are mutation sites
            self.compDNA = 'ATGATCCCTACCTTATTGACTGCAACTTCTGTATTTATTATAGCCTTCATAGCTGCTCCTCCAGTAGATA\
TTGATGGTATTCGTGAACCTGTTTCTGGATCTCTACTTTACGGAAACAATATTATTTCGGGTGCTATTAT\
TCCTACTTCTGCAGCTATTGGGTTGCACTTTTACCCAATCTGGGAAGCGGCATCAGTTGATGAGTGGTTA\
TACAATGGTGGTCCTTATGAACTAATCGTTCTACACTTCTTACTTGGTGTAGCTTGTTATATGGGTCGTG\
AGTGGGAACTTAGTTTCCGTCTGGGTATGCGTCCGTGGATTGCTGTTGCATATTCAGCTCCGGTTGCAGC\
GGCTACTGCTGTTTTCTTGATCTACCCAATCGGTCAAGGAAGCTTTTCTGATGGTATGCCTCTAGGAATC\
TCTGGTACTTTCAACTTTATGATCGTATTCCAGGCTGAGCACAACATCCTTATGCACCCATTTCACATGT\
TAGGTGTAGCTGGTGTATTCGGCGGCTCCCTATTTAGTGCTATGCATGGTTCCTTGGTAACTTCTAGTTT\
GATCAGGGAAACCACAGAAAATGAATCTGCTAACGAAGGTTACAGATTCGGTCAAGAGGAAGAAACTTAT\
AACATCGTAGCTGCTCATGGTTATTTTGGTCGATTGATCTTCCAATATGCTAGTTTCAACAACTCTCGTT\
CTTTACACTTCTTCTTAGCTGCTTGGCCGGTAATCGGTATTTGGTTTACTGCTTTGGGTATTAGTACTAT\
GGCTTTCAACCTAAACGGTTTCAACTTCAACCAATCTGTAGTTGATAGTCAAGGTCGTGTAATTAACACC\
TGGGCTGATATCATTAACCGTGCTAACCTTGGTATGGAAGTTATGCATGAACGTAATGCTCATAACTTCC\
CTCTAGACTTAGCTGCTATCGAAGCTCCATCTACAAATGGATAA'
            self.compProt = 'MIPTLLTATSVFIIAFIAAPPVDIDGIREPVSGSLLYGNNIISG\
AIIPTSAAIGLHFYPIWEAASVDEWLYNGGPYELIVLHFLLGVACYMGREWELSFRLG\
MRPWIAVAYSAPVAAATAVFLIYPIGQGSFSDGMPLGISGTFNFMIVFQAEHNILMHP\
FHMLGVAGVFGGSLFSAMHGSLVTSSLIRETTENESANEGYRFGQEEETYNIVAAHGY\
FGRLIFQYASFNNSRSLHFFLAAWPVIGIWFTALGISTMAFNLNGFNFNQSVVDSQGR\
VINTWADIINRANLGMEVMHERNAHNFPLDLAAIEAPSTNG'
            self.testAccession = 'K01200'
        if self.targetSite == "EPSPS":
            self.segments = ['KEEVQ', 'TAAGG', 'MRPL', 'LGNAG' ]
            self.susSegments = ['MRPL', 'LGNAG']
            self.resSegments = {'MRPL':'MR\wL', 'LGNAG':'LGNA\w'}
            self.compDNA = 'GCGGAGGAGGTGGTGCTGCAGCCCATCAAGGAGATCTCCGGCGTCGTGAAGCTGCCGGGGTCCAAGTCGC\
TCTCCAACCGGATCCTCCTGCTCTCCGCCCTCGCCGAGGTAAGAAGAAGGATCCCCCCTCCCTTTCAGAG\
TCAATTGAAATTGGATGTGGAGATGAGATTTTACCAGGGGTTAGGTGATGATTTCCTGCTGCTGAAATGT\
CTGTGTAGTCATAGGAATATACGGATCAGATGGAGCTCGGTCATTCACTAGTAGGCATTCGTCTCTGTAG\
ATTGTATTCACCTTAATTAAGGCGATTGATGAGGTAGACTGAAAGCAGCAGGGGGATTTGGCTATTTAGC\
GATACTGAATCGTTGGGATGGCATGTGTTCTGTATCAGGGTACTAATTGCAATACGTGCTGAAGGTTCCA\
TCCAGGTTGGAACTTGATCACGAGAGCCCACATTTTAATTGAAAAATGTTGACTGGATTATAGTTTCATG\
TGTCACTGTTTATTTGGCTTCCATTAGTTGGGAAAAACTAGTCGAGGTGGAGCGTGCATTTTTAAACCCT\
TATACCAAGATAAGAAGCAGCCGCCTTCTCCTTTTCGTTTCCTCTTAGAAAGGGGGAATTGGAACATTAG\
ATGAGTAACGGTTGATGCTGTAACCTTTTCTCAGGGAACAACTGTGGTGGATAACCTTTTAAACAGTGAG\
GACGTCCACTACATGCTCGGGGCCCTGAAAACCCTCGGACTCTCTGTGGAAGCGGACAAAGCTGCCAAAA\
GAGCGGTAGTTGTTGGCTGTGGTGGCAAGTTCCCAGTTGAGAAGGATGCGAAAGAGGAGGTGCAGCTCTT\
CTTGGGGAATGCTGGAACTGCAATGCGACCATTGACAGCAGCCGTAACTGCTGCTGGAGGAAATGCAACG\
TGAGTTGGTTTTTCCATCCTCAGAATATGCCCGTGGAACTGAGTAGCGAAATTGTGGTGATATTTCGTGA\
CTTATCGTGCATCTTTTCTGAATTCCAGTTATGTGCTTGATGGAGTGCCAAGAATGCGGGAGAGACCCAT\
TGGCGACTTGGTTGTCGGATTGAAACAGCTTGGTGCAGATGTTGATTGTTTCCTTGGCACTGACTGCCCA\
CCTGTTCGTGTCAAGGGAATCGGAGGGCTACCTGGTGGCAAGGTTAGTTACTAAAACCAGCATGCTACAT\
TCTTCTGTAACCAATTGAAATTTTCTTGTTGAGCTTGTGCATTTCAAAGAAAAAGTCTAGAATATGTGTT\
TTGACTTTATAAACCGCACAGATTGTCATCTCTGACCAGGAATCCATATTTTCAATAAACTCATCAAGTA\
CTATTTGGCTCATCATCTTGCAAGTTATTTGCTCCTTTTGGGCTGGTGTTAGTTTTCTGGTCTCACATTG\
TGTGGGATACCATGAATTAGCTCTTAAAAATGTGTTACTTTCTACAGGTTAAGTTATCTGGTTCTATCAG\
CAGTCAGTACTTGAGTGCCTTGCTGATGGCTGCTCCTTTAGCTCTTGGGGATGTGGAGATTGAAATMATT\
GATAAACTGATCTCCATCCCTTATGTTGAAATGACATTGAGATTGATGGAGCGTTTTGGCGTGAAAGCAG\
AGCATTCTGATAGCTGGGACAGATTCTACATCAAGGGAGGTCAAAAATACAAGTAAGCCAGTCATTTTGT\
TCTCAGCTTACCTTCCTAATCACTGATTTATCCCAGATAAACTGGAGACTGAAATTATTTCAGAAAAAAA\
ACTTAGTATTGATTATGTAAGGTATTTAATCAGCTAGAATATGACCAGTCTGTTGGAGTCATGAAAGCTA\
ACTAAAATAGCTAAGCAATGTCTAGTAAGTCAATCCATTTGGTTATAAATAGAGTTGATAACACCAAAAG\
TAGCAACCATTCTAGGTGAGGACTTCCTGCTGCATGGCATGGGTAGCATTTTTTTTAGGGAAAGGTACCA\
GATTAGTTTCTTTGCACCCCCTTGATGTGAACCCGCWCATGAAGTATCAGGATAACTGTCCTTATTTTGA\
CTTAAAATACTCTCTTAGTCTTGTGTACTCAGATTGGTAGTTCAAACTTACCAGGTCCCCTAAAAATGCC\
TACGTGGAAGGTGATGCCTCAAGTGCGAGCTATTTCTTGGCTGGTGCTGCAATCACTGGAGGGACTGTGA\
CTGTTGAAGGTTGTGGCACCACCAGTCTGCAGGTAGAAATCTGCCAAAATGCTACTTTTGATTCATCTGC\
CATAATACTCACAATAGACATATTTGATTCACCTGCCAATGCCAAGTGATGTGTTAATGAGTGGATACTC\
ATGTAAAGGGGCTAAAATTCTGAAACCAACAATTCTATAAATGACTAAATAAATATGCTTTCTACTTGGT\
CGTATTCGTTGACAAATATGCCTAATGTTGCAGGGTGATGTGAAATTTGCCGAGGTACTCGAGATGATGG\
GAGCGAAGGTTACATGGACTGAAACTAGCGTAACTGTTACCGGTCCACAACGTGAGCCATTTGGGAGGAA\
ACACCTAAAAGCTATTGATGTTAACATGAACAAAATGCCCGATGTCGCCATGACTCTTGCCGTGGTTGCC\
CTATTTGCTGATGGCCCAACTGCTATCAGAGATGGTAAACATCCTCAGCCGAACAATGCCTGACTTCATA\
GCACTTTAAGCTGGTTTTGGCTATGCTTACTGAAACTTCTGTTCTTTAACAGTGGCTTCCTGGAGAGTAA\
AGGAGACCGAGAGGATGGTTGCAATCCGGACTGAGCTAACAAAGGTAAGAATACTTCATAAACCTTTCGT\
TTATTGCCAGATTTGGACATCTCTTTTGCTCTCCTGCCGGCGTTCCATCTTCAGCTGTTCACATGCTGAC\
GGCTATTTACATCTTTCTAGCTGGGAGCGTCGGTCGAGGAAGGACCGGACTACTGCATTATCACACCGCC\
CGAGAAGCTGAACGTAACGGCCATCGACACCTACGATGACCACAGGATGGCCATGGCCTTCTCCCTCGCC\
GCCTGCGCCGACGTGCCTGTGACCATCCGGGACCCCGGCTGCACCCGCAAGACCTTCCCAGACTACTTCG\
ACGTGCTGAGCACTTTCGTCAAGAAC'
            self.compProt = "AEEVVLQPIKEISGVVKLPGSKSLSNRILLLSALAEGTTVVDNL\
LNSEDVHYMLGALKTLGLSVEADKAAKRAVVVGCGGKFPVEKDAKEEVQLFLGNAGTA\
MRSLTAAVTAAGGNATYVLDGVPRMRERPIGDLVVGLKQLGADVDCFLGTDCPPVRVK\
GIGGLPGGKVKLSGSISSQYLSALLMAAPLALGDVEIEIIDKLISIPYVEMTLRLMER\
FGVKAEHSDSWDRFYIKGGQKYKSPKNAYVEGDASSASYFLAGAAITGGTVTVEGCGT\
TSLQGDVKFAEVLEMMGAKVTWTETSVTVTGPQREPFGRKHLKAIDVNMNKMPDVAMT\
LAVVALFADGPTAIRDVASWRVKETERMVAIRTELTKLGASVEEGPDYCIITPPEKLN\
VTAIDTYDDHRMAMAFSLAACADVPVTIRDPGCTRKTFPDYFDVLSTFVKN"
            #change MRSL to MRPL for non-resistant standard
            self.testAccession = 'JN004269'
        if self.targetSite == "alpha-tubulin" :
            self.segments = ['NEFQT', 'SLTAS', 'HFMLS', 'SAEKA', 'DVNEF']
            self.susSegments = ['SLTAS', 'HFMLS']
            self.resSegments = {'SLTAS': 'SL\wAS', 'HFMLS': 'HF\wLS'} #Thr-239-Ile, Met-268-Thr, Leu-136-Phe
            self.compDNA = 'CAGAGACAGGCGTCTTCGTACTCGCCTCTCTCCGCGACTCCAAGCTTTCTCCCTCCTCCCATTTCCCGTC\
GCCGCCGCCTCACCCGCCCGACACCATGAGGGAGTGCATCTCGATCCACATCGGCCAGGCCGGTATCCAG\
GTCGGAAACGCTTGCTGGGAGCTCTACTGCCTCGAGCATGGCATCCAGGCTGACGGTCAGATGCCCGGTG\
ACAAGACCATTGGAGGAGGTGATGATGCTTTCAACACCTTCTTCAGTGAGACTGGCGCCGGCAAGCATGT\
GCCCCGTGCCGTGTTTGTTGACCTTGAGCCCACTGTGATCGATGAGGTCAGGACTGGCACCTACCGCCAG\
CTGTTTCACCCTGAGCAGCTCATCAGTGGCAAGGAGGATGCTGCCAACAACTTTGCCCGTGGTCACTACA\
CCATTGGCAAGGAGATTGTTGACCTGTGCCTTGACCGCATCAGGAAGCTTGCCGACAACTGTACTGGTCT\
CCAGGGCTTCCTTGTCTTCAACGCTGTCGGTGGAGGAACGGGCTCTGGTCTTGGTTCCCTCCTCCTTGAG\
CGCCTGTCTGTTGACTACGGCAAGAAGTCCAAGCTCGGGTTCACTGTCTACCCGTCTCCTCAGGTCTCCA\
CCTCGGTGGTTGAGCCATACAACAGTGTGCTGTCCACCCACTCCCTCCTTGAGCACACCGATGTGGCTGT\
GCTGCTTGACAACGAGGCCATCTACGACATCTGCCGCCGCTCCCTGGACATTGAGCGCCCAACCTACACC\
AACCTGAACAGGCTTGTTTCTCAGGTCATTTCATCACTGACAGCCTCTCTGAGGTTCGATGGTGCTCTGA\
ACGTGGATGTGAACGAGTTCCAGACCAACTTGGTGCCCTACCCGAGGATCCACTTCATGCTTTCATCCTA\
CGCTCCAGTGATCTCCGCGGAGAAGGCCTACCACGAGCAGCTGTCCGTGGCTGAGATCACCAACAGCGCG\
TTCGAGCCTTCCTCCATGATGGCCAAGTGCGACCCCCGCCACGGCAAGTACATGGCCTGCTGCCTCATGT\
ACCGTGGTGATGTGGTGCCCAAGGACGTGAACGCCGCCGTTGCCACCATCAAGACCAAGCGCACCATCCA\
GTTCGTGGACTGGTGCCCCACTGGCTTCAAGTGCGGTATCAACTACCAGCCACCCAGCGTCGTCCCCGGC\
GGCGACCTGGCCAAGGTGCAGAGGGCCGTGTGCATGATCTCCAACTCCACCAGTGTCGTCGAGGTGTTCT\
CCCGCATCGACCACAAGTTCGACCTCATGTACGCCAAGCGCGCCTTCGTCCACTGGTACGTGGGTGAGGG\
TATGGAGGAGGGTGAGTTCTCCGAGGCGCGTGAGGACCTTGCTGCCCTTGAGAAGGACTACGAGGAGGTC\
GGCGCTGAGTTCGACGAGGGTGAGGAAGGTGATGAGGGTGACGAGTACTAGATGAATCTACCGCTTCCTG\
CTGTTGTGTCAGGCCTGTGTGCCGCTGCTATCCTGTGATCTGCCCGAGGGCGCTATCGTGTCGTGTCAGT\
TTGAACTATTTGTCATTGTGTGGTTACAACCCCTGAAGTTGTAGACATGTTTAATTCCCCGCTTTGCTAC\
TGGGTTATCAACATCGTTATGTTTGTCTAGATTGCTGCCCCTTTGTTTTGTTTCTTTTTTGTGCGTGGTT\
CTTCTCTTTTATC'
            self.compProt = 'MRECISIHIGQAGIQVGNACWELYCLEHGIQADGQMPGDKTIGG\
GDDAFNTFFSETGAGKHVPRAVFVDLEPTVIDEVRTGTYRQLFHPEQLISGKEDAANN\
FARGHYTIGKEIVDLCLDRIRKLADNCTGLQGFLVFNAVGGGTGSGLGSLLLERLSVD\
YGKKSKLGFTVYPSPQVSTSVVEPYNSVLSTHSLLEHTDVAVLLDNEAIYDICRRSLD\
IERPTYTNLNRLVSQVISSLTASLRFDGALNVDVNEFQTNLVPYPRIHFMLSSYAPVI\
SAEKAYHEQLSVAEITNSAFEPSSMMAKCDPRHGKYMACCLMYRGDVVPKDVNAAVAT\
IKTKRTIQFVDWCPTGFKCGINYQPPSVVPGGDLAKVQRAVCMISNSTSVVEVFSRID\
HKFDLMYAKRAFVHWYVGEGMEEGEFSEAREDLAALEKDYEEVGAEFDEGEEGDEGDEY'
            self.testAccession = 'AF008120'
        if self.targetSite == "PPO2": #G210 deletion, R98G, R98M
            self.segments = ['VAGTCGGDP', 'QNKRYI', 'VSTKN', 'KLKSHG', 'TFPEV', 'GGENAS', 'TAPIRN']
            self.susSegments = ['GTCGGDP', 'QNKRYI']
            self.resSegments = {'GTCGGDP':'GTC\w?GDP', 'QNKRYI': 'QNK\wYI'} 
            self.compDNA = 'ATGGTAATTCAATCCATTACCCACCTTTCACCAAACCTTGCATTGCCATCGCCATTGTCAGTTTCAACCA\
AGAACTACCCAGTAGCTGTAATGGGCAACATTTCTGAGCGGGAAGAACCCACTTCTGCTAAAAGGGTTGC\
TGTTGTTGGTGCTGGAGTTAGTGGACTTGCTGCTGCATATAAGCTAAAATCCCATGGTTTGAGTGTGACA\
TTGTTTGAAGCTGATTCTAGAGCTGGAGGCAAACTTAAAACTGTTAAAAAAGATGGTTTTATTTGGGATG\
AGGGGGCAAATACTATGACAGAAAGTGAGGCAGAGGTCTCGAGTTTGATCGATGATCTTGGGCTTCGTGA\
GAAGCAACAGTTGCCAATTTCACAAAATAAAAGATACATAGCTAGAGCCGGTCTTCCTGTGCTACTACCT\
TCAAATCCCGCTGCACTACTCACGAGCAATATCCTTTCAGCAAAATCAAAGCTGCAAATTATGTTGGAAC\
CATTTCTCTGGAGAAAACACAATGCTACTGAACTTTCTGATGAGCATGTTCAGGAAAGCGTTGGTGAATT\
TTTTGAGCGACATTTTGGGAAAGAGTTTGTTGATTATGTTATTGACCCTTTTGTTGCGGGTACATGTGGT\
GGAGATCCTCAATCGCTTTCCATGCACCATACATTTCCAGAAGTATGGAATATTGAAAAAAGGTTTGGCT\
CTGTGTTTGCCGGACTAATTCAATCAACATTGTTATCTAAGAAGGAAAAGGGTGGAGAAAATGCTTCTAT\
TAAGAAGCCTCGTGTACGTGGTTCATTTTCATTTCAAGGTGGAATGCAGACACTTGTTGACACAATGTGC\
AAACAGCTTGGTGAAGATGAACTCAAACTCCAGTGTGAGGTGCTGTCCTTGTCATATAACCAGAAGGGGA\
TCCCCTCACTAGGGAATTGGTCAGTCTCTTCTATGTCAAATAATACCAGTGAAGATCAATCTTATGATGC\
TGTGGTTGTCACTGCTCCAATTCGCAATGTCAAAGAAATGAAGATTATGAAATTTGGAAATCCATTTTCA\
CTTGACTTTATTCCAGAGGTGACGTACGTACCCCTTTCCGTTATGATTACTGCATTCAAAAAGGATAAAG\
TGAAGAGACCTCTTGAGGGCTTCGGAGTTCTTATCCCCTCTAAAGAGCAACATAATGGACTGAAGACTCT\
TGGTACTTTATTTTCCTCCATGATGTTTCCTGATCGTGCTCCATCTGACATGTGTCTCTTTACTACATTT\
GTCGGAGGAAGCAGAAATAGAAAACTTGCAAACGCTTCAACGGATGAATTGAAGCAAATAGTTTCTTCTG\
ACCTTCAGCAGCTGTTGGGCACTGAGGACGAACCTTCATTTGTCAATCATCTCTTTTGGAGCAACGCATT\
CCCATTGTATGGACACAATTACGATTCTGTTTTGAGAGCCATAGACAAGATGGAAAAGGATCTTCCTGGA\
TTTTTTTATGCAGGTAACCATAAGGGTGGACTTTCAGTGGGAAAAGCGATGGCCTCCGGATGCAAGGCTG\
CGGAACTTGTAATATCCTATCTGGACTCTCATATATACGTGAAGATGGATGAGAAGACCGCGTAA'
            self.compProt = 'MVIQSITHLSPNLALPSPLSVSTKNYPVAVMGNISEREEPTSAK\
RVAVVGAGVSGLAAAYKLKSHGLSVTLFEADSRAGGKLKTVKKDGFIWDEGANTMTES\
EAEVSSLIDDLGLREKQQLPISQNKRYIARAGLPVLLPSNPAALLTSNILSAKSKLQI\
MLEPFLWRKHNATELSDEHVQESVGEFFERHFGKEFVDYVIDPFVAGTCGGDPQSLSM\
HHTFPEVWNIEKRFGSVFAGLIQSTLLSKKEKGGENASIKKPRVRGSFSFQGGMQTLV\
DTMCKQLGEDELKLQCEVLSLSYNQKGIPSLGNWSVSSMSNNTSEDQSYDAVVVTAPI\
RNVKEMKIMKFGNPFSLDFIPEVTYVPLSVMITAFKKDKVKRPLEGFGVLIPSKEQHN\
GLKTLGTLFSSMMFPDRAPSDMCLFTTFVGGSRNRKLANASTDELKQIVSSDLQQLLG\
TEDEPSFVNHLFWSNAFPLYGHNYDSVLRAIDKMEKDLPGFFYAGNHKGGLSVGKAMA\
SGCKAAELVISYLDSHIYVKMDEKTA'   
            self.testAccession = 'DQ386117'                    
            
    def idCorrectProtein(self):
        possibleProts = self.translator()
        for prot in possibleProts.values():
            for seg in self.segments:
                if seg in prot:
                    self.prot = prot
                    break
    
    def alignProteins(self):
        align = pairwise2.align.globalxx(self.compProt, self.prot)
        formattedAlignment = (pairwise2.format_alignment(*align[0]))
        
    def detectMutations(self):
        '''Determine if a specific mutation is present in the the selected
        protein string.  Return DICTIONARY of mutations found and a DICTIONARY 
        of Normal Segments and Mutant Segments
        '''
        mutationsPresent = {}
        specificMutations = {}
        for seg in self.susSegments:
            if seg in self.prot:
                mutationsPresent[seg]="No Mutation Present"
            elif re.search(self.resSegments[seg], self.prot):
                reObj = re.search(self.resSegments[seg], self.prot)
                mutationsPresent[seg]="Mutation Present"
                start = reObj.start() #self.resSegments[seg].find(self.prot)
                end = len(seg)+start
                mutant = self.prot[start:end]
                specificMutations[seg] = mutant
            else:
                mutationsPresent[seg]="SNP not in sequence range"
                
        self.mutationsPresent = mutationsPresent
        self.specificMutations = specificMutations
                

    def translateIndividualSeq(self, sequence, start):
        '''Takes a string as sequence instead of a list and translates only one 
        possible reading frame to amino acid sequence.  
        sequence: STRING, nucleic acid sequence
        start: INT, position to begin translation
        RETURN: STRING, translated amino acid sequence.
        '''
        codons = {'atg': 'M', 'ttt': 'F', 'ttc': 'F', 'tta': 'L', 'ttg': 'L', 'ctt': 'L',
'ctc': 'L', 'cta': 'L', 'ctg': 'L','att': 'I', 'atc': 'I', 'ata': 'I', 'gtt': 'V',
'gtc': 'V', 'gta': 'V', 'gtg': 'V', 'tct': 'S', 'tcc': 'S', 'tca': 'S', 'tcg': 'S',
'cct': 'P', 'ccc': 'P', 'cca': 'P', 'ccg': 'P', 'act': 'T', 'acc': 'T', 'aca': 'T',
'acg': 'T', 'gct': 'A', 'gcc': 'A', 'gca': 'A', 'gcg': 'A', 'tat': 'Y', 'tac': 'Y', 
'taa': '*', 'tag': '*', 'cat': 'H', 'cac': 'H', 'caa': 'Q', 'cag': 'Q', 'aat': 'N',
'aac': 'N', 'aaa': 'K', 'aag': 'K', 'gat': 'D', 'gac': 'D', 'gaa': 'E', 'gag': 'E',
'tgt': 'C', 'tgc': 'C', 'tga': '*', 'tgg': 'W', 'cgt': 'R', 'cgc': 'R', 'cga': 'R',
'cgg': 'R', 'agt': 'S', 'agc': 'S', 'aga': 'R', 'agg': 'R', 'ggt': 'G', 'ggc': 'G',
'gga': 'G', 'ggg': 'G'} #change "STOP" to an asterisk
        wobble = start + 3   
        codonList = []
        codon = None
        translate = ''
        while wobble < len(sequence):
            codon = sequence[start:wobble]
            codonList.append(codon)
            try:
                translate+=codons[codon.lower()]
            except:
                translate+="N"
            start +=3
            wobble +=3
        return translate  
    
    def translator(self):
        '''Takes a sequence string and translates both forward and reverse possible amino
        acid sequences and output a dictionary of possible translations.
        INPUT: Sequence: STRING of sequenced nucleotides
        RETURN: DICTIONARY of possible translations.
        '''
        seq = Seq(self.sequence)
        revSeq = str(seq.reverse_complement())
        starts = [0, 1, 2]
        possibleTranslations = {}
        num = 1
        for start in starts:
            name = "+" + str(num)
            revName = "-" + str(num)
            translation = self.translateIndividualSeq(self.sequence, start)
            revTranslation = self.translateIndividualSeq(revSeq, start)
            possibleTranslations[name] = translation
            possibleTranslations[revName] = revTranslation
            num += 1
        return possibleTranslations

ALSSeq = 'GCCACAGCCACAGCCACGTCCACAGCCGTCGCCATCTCGGGCGCCACCTCCGCCCTACCCAAACCCACCC\
TCCCGCGCCACCTGCCCGCCCCACGCCGCGCCGCCCTCGCCGCCGCCACCCGCATCAGGTGCTCCACGGT\
GTCCCCTTCGCCCGCCCCTCCCGCCACCGCGCTCCGCCCATGGGGCCCCACCGAGCCCCGCAAGGGCGCC\
GACATCCTCGTCGAGGCCCTGGAGCGCTGCGGCATCAGCGACGTCTTCGCCTACCCCGGCGGCGCCTCGA\
TGGAGATCCACCAGGCGCTCACGCGCTCGCCGGCCATCACCAACCACCTCTTCCGGCACGAGCAGGGGGA\
GGCGTTCGCCGCGTCCGGGTACGCCCGCGCCTCCGGCCGCGTCGGGGTCTGCGTCGCCACCTCCGGCCCC\
GGCGCCACCAACCTCGTCTCCGCGCTCGCCGACGCTCTGCTCGACTCCATCCCGATGGTCGCCATCACGG\
GGCAGGTCCCGCGCCGCATGATCGGCACGGACGCCTTCCAGGAGACGCCGATTGTGGAGGTCACCCGTTC\
CATCACCAAGCACAATTACCTGGTCCTTGACGTGGAGGACATCCCCCGCGTCATTCAGGAAGCCTTCTTC\
CTCGCCTCCTCCGGCCGGCCGGGGCCGGTGCTGGTCGACATCCCCAAGGACATCCAGCAGCAGATGGCCG\
TGCCTGTCTGGGACGCGCCAATGAGTCTGCCAGGGTACATTGCTCGCCTCCCTAAGCCGCCGGCTACCGA\
ATTGCTTGAGCAGGTCCTGCGTCTGGTTGGTGAGGCTCGGCGCCCAATTCTGTATGTTGGTGGTGGCTGC\
TCTGCGTCCGGCGAGGAGTTGCGCCGCTTTGTTGAGCTCACTGGGATCCCAGTGACAACTACCCTCATGG\
GTCTTGGCAACTTCCCCAGCGATGACCCACTGTCTCTGCGTATGCTTGGGATGCATGGTACAGTCTACGC\
CAATTACGCGGTAGATAAGGCTGACCTGCTGCTTGCATTTGGTGTGCGGTTTGATGACCGTGTGACTGGA\
AAAATAGAGGCTTTTGCAAGCAGGTCCAAGATTGTGCACATTGACATTGATCCAGCTGAGATTGGCAAGA\
ACAAGCAGCCACACGTCTCCATTTGTGCAGATGTCAAGATCGCTTTGGAGGGCTTGAATTCTCTTCTGCT\
AAATGGGAGCAAAACACACAAGAGTTTAGATTTTAGTTCGTGGCATGAGGAGTTGGACCAGCAGAAGAGG\
GAGTTTCCTCTGGGATTCAAAACTTTTGGTGAGGCGATCCCACCACAATATGCTATCCAGGTACTGGATG\
AGCTGACCAAAGGGGAGGCGATCATTGCCACTGGTGTTGGGCAGCACCAGATGTGGGCGGCTCAGTATTA\
CACGTACAAGCGGCCACGTCAGTGGCTGTCTTCGGCTGGTCTTGGAGCAATGGGGTTTGGGTTGCCAGCT\
GCAGCTGGTGCTGCTGTGGCCAACCCAGGTGTCACAGTTGTTGACATTGATGGAGATGGTAGCTTCCTCA\
TGAATATTCAGGAGTTGGCACTGATTCGTATTGAGAACCTCCCTGTTAAGGTGATGATACTGAACAACCA\
ACATCTGGGAATGGTGGTGCAGTGGGAGGACAGGTTTTACAAGGCCAATCGGGCGCACACGTACCTTGGG\
AACCCAGAAAATGAGAGTGAGATATATCCAGATTTTGTGACGATTGCCAAGGGGTTCAATGTTCCTGCTG\
TTCGTGTGACAAAGAAAAGTGAAGTCCGTGCAGCAATCAAGAAGATGCTTGAGACTCCAGGGCCATACTT\
GTTGGATATCATCGTCCCTCACCAGGAGCATGTGCTGCCTATGATCCCCAGCGGTGGTGCTTTCAAGGAC\
ATTATCATGGAGGGCGATGGCA'  


#ALSSeq2 contains mutation W for L 574
ALSSeq2 = 'GCCACAGCCACAGCCACGTCCACAGCCGTCGCCATCTCGGGCGCCACCTCCGCCCTACCCAAACCCACCC\
TCCCGCGCCACCTGCCCGCCCCACGCCGCGCCGCCCTCGCCGCCGCCACCCGCATCAGGTGCTCCACGGT\
GTCCCCTTCGCCCGCCCCTCCCGCCACCGCGCTCCGCCCATGGGGCCCCACCGAGCCCCGCAAGGGCGCC\
GACATCCTCGTCGAGGCCCTGGAGCGCTGCGGCATCAGCGACGTCTTCGCCTACCCCGGCGGCGCCTCGA\
TGGAGATCCACCAGGCGCTCACGCGCTCGCCGGCCATCACCAACCACCTCTTCCGGCACGAGCAGGGGGA\
GGCGTTCGCCGCGTCCGGGTACGCCCGCGCCTCCGGCCGCGTCGGGGTCTGCGTCGCCACCTCCGGCCCC\
GGCGCCACCAACCTCGTCTCCGCGCTCGCCGACGCTCTGCTCGACTCCATCCCGATGGTCGCCATCACGG\
GGCAGGTCCCGCGCCGCATGATCGGCACGGACGCCTTCCAGGAGACGCCGATTGTGGAGGTCACCCGTTC\
CATCACCAAGCACAATTACCTGGTCCTTGACGTGGAGGACATCCCCCGCGTCATTCAGGAAGCCTTCTTC\
CTCGCCTCCTCCGGCCGGCCGGGGCCGGTGCTGGTCGACATCCCCAAGGACATCCAGCAGCAGATGGCCG\
TGCCTGTCTGGGACGCGCCAATGAGTCTGCCAGGGTACATTGCTCGCCTCCCTAAGCCGCCGGCTACCGA\
ATTGCTTGAGCAGGTCCTGCGTCTGGTTGGTGAGGCTCGGCGCCCAATTCTGTATGTTGGTGGTGGCTGC\
TCTGCGTCCGGCGAGGAGTTGCGCCGCTTTGTTGAGCTCACTGGGATCCCAGTGACAACTACCCTCATGG\
GTCTTGGCAACTTCCCCAGCGATGACCCACTGTCTCTGCGTATGCTTGGGATGCATGGTACAGTCTACGC\
CAATTACGCGGTAGATAAGGCTGACCTGCTGCTTGCATTTGGTGTGCGGTTTGATGACCGTGTGACTGGA\
AAAATAGAGGCTTTTGCAAGCAGGTCCAAGATTGTGCACATTGACATTGATCCAGCTGAGATTGGCAAGA\
ACAAGCAGCCACACGTCTCCATTTGTGCAGATGTCAAGATCGCTTTGGAGGGCTTGAATTCTCTTCTGCT\
AAATGGGAGCAAAACACACAAGAGTTTAGATTTTAGTTCGTGGCATGAGGAGTTGGACCAGCAGAAGAGG\
GAGTTTCCTCTGGGATTCAAAACTTTTGGTGAGGCGATCCCACCACAATATGCTATCCAGGTACTGGATG\
AGCTGACCAAAGGGGAGGCGATCATTGCCACTGGTGTTGGGCAGCACCAGATGTGGGCGGCTCAGTATTA\
CACGTACAAGCGGCCACGTCAGTGGCTGTCTTCGGCTGGTCTTGGAGCAATGGGGTTTGGGTTGCCAGCT\
GCAGCTGGTGCTGCTGTGGCCAACCCAGGTGTCACAGTTGTTGACATTGATGGAGATGGTAGCTTCCTCA\
TGAATATTCAGGAGTTGGCACTGATTCGTATTGAGAACCTCCCTGTTAAGGTGATGATACTGAACAACCA\
ACATCTGGGAATGGTGGTGCAGTTGGAGGACAGGTTTTACAAGGCCAATCGGGCGCACACGTACCTTGGG\
AACCCAGAAAATGAGAGTGAGATATATCCAGATTTTGTGACGATTGCCAAGGGGTTCAATGTTCCTGCTG\
TTCGTGTGACAAAGAAAAGTGAAGTCCGTGCAGCAATCAAGAAGATGCTTGAGACTCCAGGGCCATACTT\
GTTGGATATCATCGTCCCTCACCAGGAGCATGTGCTGCCTATGATCCCCAGCGGTGGTGCTTTCAAGGAC\
ATTATCATGGAGGGCGATGGCA'           
            
test = resistanceMutationSearch(ALSSeq2, "ALS")
print test.sequence
print test.targetSite
test.determineTarget()
print test.susSegments
print test.resSegments

test.idCorrectProtein()
print test.prot

test.detectMutations()
print test.mutationsPresent
print test.specificMutations
   
    
             
ALSPROT = 'MATATATSTAVAISGATSALPKPTLPRHLPAPRRAALAAATRIRC\
STVSPSPAPPATALRPWGPTEPRKGADILVEALERCGISDVFAYPGGASMEIHQALTR\
SPAITNHLFRHEQGEAFAASGYARASGRVGVCVATSGPGATNLVSALADALLDSIPMV\
AITGQVPRRMIGTDAFQETPIVEVTRSITKHNYLVLDVEDIPRVIQEAFFLASSGRPG\
PVLVDIPKDIQQQMAVPVWDAPMSLPGYIARLPKPPATELLEQVLRLVGEARRPILYV\
GGGCSASGEELRRFVELTGIPVTTTLMGLGNFPSDDPLSLRMLGMHGTVYANYAVDKA\
DLLLAFGVRFDDRVTGKIEAFASRSKIVHIDIDPAEIGKNKQPHVSICADVKIALEGL\
NSLLLNGSKTHKSLDFSSWHEELDQQKREFPLGFKTFGEAIPPQYAIQVLDELTKGEA\
IIATGVGQHQMWAAQYYTYKRPRQWLSSAGLGAMGFGLPAAAGAAVANPGVTVVDIDG\
DGSFLMNIQELALIRIENLPVKVMILNNQHLGMVVQWEDRFYKANRAHTYLGNPENES\
EIYPDFVTIAKGFNVPAVRVTKKSEVRAAIKKMLETPGPYLLDIIVPHQEHVLPMIPSGGAFKDIIMEGD'


ALSMUT = 'MATATATSTAVAISGATSALPKPTLPRHLPAPRRAALAAATRIRC\
STVSPSPAPPATALRPWGPTEPRKGADILVEALERCGISDVFAYPGGASMEIHQALTR\
SPAITNHLFRHEQGEAFAASGYARASGRVGVCVATSGPGATNLVSALADALLDSIPMV\
AITGQVPRRMIGTDAFQETPIVEVTRSITKHNYLVLDVEDIPRVIQEAFFLASSGRPG\
PVLVDIPKDIQQQMAVPVWDAPMSLPGYIARLPKPPATELLEQVLRLVGEARRPILYV\
GGGCSASGEELRRFVELTGIPVTTTLMGLGNFPSDDPLSLRMLGMHGTVYANYAVDKA\
DLLLAFGVRFDDRVTGKIEAFASRSKIVHIDIDPAEIGKNKQPHVSICADVKIALEGL\
NSLLLNGSKTHKSLDFSSWHEELDQQKREFPLGFKTFGEAIPPQYAIQVLDELTKGEA\
IIATGVGQHQMWAAQYYTYKRPRQWLSSAGLGAMGFGLPAAAGAAVANPGVTVVDIDG\
DGSFLMNIQELALIRIENLPVKVMILNNQHLGMVVQLEDRFYKANRAHTYLGNPENES\
EIYPDFVTIAKGFNVPAVRVTKKSEVRAAIKKMLETPGPYLLDIIVPHQEHVLPMIPSGGAFKDIIMEGD'

ACCASE_DNA = 'GCCACAGCCACAGCCACGTCCACAGCCGTCGCCATCTCGGGCGCCACCTCCGCCCTACCCAAACCCACCC\
TCCCGCGCCACCTGCCCGCCCCACGCCGCGCCGCCCTCGCCGCCGCCACCCGCATCAGGTGCTCCACGGT\
GTCCCCTTCGCCCGCCCCTCCCGCCACCGCGCTCCGCCCATGGGGCCCCACCGAGCCCCGCAAGGGCGCC\
GACATCCTCGTCGAGGCCCTGGAGCGCTGCGGCATCAGCGACGTCTTCGCCTACCCCGGCGGCGCCTCGA\
TGGAGATCCACCAGGCGCTCACGCGCTCGCCGGCCATCACCAACCACCTCTTCCGGCACGAGCAGGGGGA\
GGCGTTCGCCGCGTCCGGGTACGCCCGCGCCTCCGGCCGCGTCGGGGTCTGCGTCGCCACCTCCGGCCCC\
GGCGCCACCAACCTCGTCTCCGCGCTCGCCGACGCTCTGCTCGACTCCATCCCGATGGTCGCCATCACGG\
GGCAGGTCCCGCGCCGCATGATCGGCACGGACGCCTTCCAGGAGACGCCGATTGTGGAGGTCACCCGTTC\
CATCACCAAGCACAATTACCTGGTCCTTGACGTGGAGGACATCCCCCGCGTCATTCAGGAAGCCTTCTTC\
CTCGCCTCCTCCGGCCGGCCGGGGCCGGTGCTGGTCGACATCCCCAAGGACATCCAGCAGCAGATGGCCG\
TGCCTGTCTGGGACGCGCCAATGAGTCTGCCAGGGTACATTGCTCGCCTCCCTAAGCCGCCGGCTACCGA\
ATTGCTTGAGCAGGTCCTGCGTCTGGTTGGTGAGGCTCGGCGCCCAATTCTGTATGTTGGTGGTGGCTGC\
TCTGCGTCCGGCGAGGAGTTGCGCCGCTTTGTTGAGCTCACTGGGATCCCAGTGACAACTACCCTCATGG\
GTCTTGGCAACTTCCCCAGCGATGACCCACTGTCTCTGCGTATGCTTGGGATGCATGGTACAGTCTACGC\
CAATTACGCGGTAGATAAGGCTGACCTGCTGCTTGCATTTGGTGTGCGGTTTGATGACCGTGTGACTGGA\
AAAATAGAGGCTTTTGCAAGCAGGTCCAAGATTGTGCACATTGACATTGATCCAGCTGAGATTGGCAAGA\
ACAAGCAGCCACACGTCTCCATTTGTGCAGATGTCAAGATCGCTTTGGAGGGCTTGAATTCTCTTCTGCT\
AAATGGGAGCAAAACACACAAGAGTTTAGATTTTAGTTCGTGGCATGAGGAGTTGGACCAGCAGAAGAGG\
GAGTTTCCTCTGGGATTCAAAACTTTTGGTGAGGCGATCCCACCACAATATGCTATCCAGGTACTGGATG\
AGCTGACCAAAGGGGAGGCGATCATTGCCACTGGTGTTGGGCAGCACCAGATGTGGGCGGCTCAGTATTA\
CACGTACAAGCGGCCACGTCAGTGGCTGTCTTCGGCTGGTCTTGGAGCAATGGGGTTTGGGTTGCCAGCT\
GCAGCTGGTGCTGCTGTGGCCAACCCAGGTGTCACAGTTGTTGACATTGATGGAGATGGTAGCTTCCTCA\
TGAATATTCAGGAGTTGGCACTGATTCGTATTGAGAACCTCCCTGTTAAGGTGATGATACTGAACAACCA\
ACATCTGGGAATGGTGGTGCAGTGGGAGGACAGGTTTTACAAGGCCAATCGGGCGCACACGTACCTTGGG\
AACCCAGAAAATGAGAGTGAGATATATCCAGATTTTGTGACGATTGCCAAGGGGTTCAATGTTCCTGCTG\
TTCGTGTGACAAAGAAAAGTGAAGTCCGTGCAGCAATCAAGAAGATGCTTGAGACTCCAGGGCCATACTT\
GTTGGATATCATCGTCCCTCACCAGGAGCATGTGCTGCCTATGATCCCCAGCGGTGGTGCTTTCAAGGAC\
ATTATCATGGAGGGCGATGGCA'

#Need to make a change in ACCASE DNA 2 to test
ACCASE_DNA2 = 'GCCACAGCCACAGCCACGTCCACAGCCGTCGCCATCTCGGGCGCCACCTCCGCCCTACCCAAACCCACCC\
TCCCGCGCCACCTGCCCGCCCCACGCCGCGCCGCCCTCGCCGCCGCCACCCGCATCAGGTGCTCCACGGT\
GTCCCCTTCGCCCGCCCCTCCCGCCACCGCGCTCCGCCCATGGGGCCCCACCGAGCCCCGCAAGGGCGCC\
GACATCCTCGTCGAGGCCCTGGAGCGCTGCGGCATCAGCGACGTCTTCGCCTACCCCGGCGGCGCCTCGA\
TGGAGATCCACCAGGCGCTCACGCGCTCGCCGGCCATCACCAACCACCTCTTCCGGCACGAGCAGGGGGA\
GGCGTTCGCCGCGTCCGGGTACGCCCGCGCCTCCGGCCGCGTCGGGGTCTGCGTCGCCACCTCCGGCCCC\
GGCGCCACCAACCTCGTCTCCGCGCTCGCCGACGCTCTGCTCGACTCCATCCCGATGGTCGCCATCACGG\
GGCAGGTCCCGCGCCGCATGATCGGCACGGACGCCTTCCAGGAGACGCCGATTGTGGAGGTCACCCGTTC\
CATCACCAAGCACAATTACCTGGTCCTTGACGTGGAGGACATCCCCCGCGTCATTCAGGAAGCCTTCTTC\
CTCGCCTCCTCCGGCCGGCCGGGGCCGGTGCTGGTCGACATCCCCAAGGACATCCAGCAGCAGATGGCCG\
TGCCTGTCTGGGACGCGCCAATGAGTCTGCCAGGGTACATTGCTCGCCTCCCTAAGCCGCCGGCTACCGA\
ATTGCTTGAGCAGGTCCTGCGTCTGGTTGGTGAGGCTCGGCGCCCAATTCTGTATGTTGGTGGTGGCTGC\
TCTGCGTCCGGCGAGGAGTTGCGCCGCTTTGTTGAGCTCACTGGGATCCCAGTGACAACTACCCTCATGG\
GTCTTGGCAACTTCCCCAGCGATGACCCACTGTCTCTGCGTATGCTTGGGATGCATGGTACAGTCTACGC\
CAATTACGCGGTAGATAAGGCTGACCTGCTGCTTGCATTTGGTGTGCGGTTTGATGACCGTGTGACTGGA\
AAAATAGAGGCTTTTGCAAGCAGGTCCAAGATTGTGCACATTGACATTGATCCAGCTGAGATTGGCAAGA\
ACAAGCAGCCACACGTCTCCATTTGTGCAGATGTCAAGATCGCTTTGGAGGGCTTGAATTCTCTTCTGCT\
AAATGGGAGCAAAACACACAAGAGTTTAGATTTTAGTTCGTGGCATGAGGAGTTGGACCAGCAGAAGAGG\
GAGTTTCCTCTGGGATTCAAAACTTTTGGTGAGGCGATCCCACCACAATATGCTATCCAGGTACTGGATG\
AGCTGACCAAAGGGGAGGCGATCATTGCCACTGGTGTTGGGCAGCACCAGATGTGGGCGGCTCAGTATTA\
CACGTACAAGCGGCCACGTCAGTGGCTGTCTTCGGCTGGTCTTGGAGCAATGGGGTTTGGGTTGCCAGCT\
GCAGCTGGTGCTGCTGTGGCCAACCCAGGTGTCACAGTTGTTGACATTGATGGAGATGGTAGCTTCCTCA\
TGAATATTCAGGAGTTGGCACTGATTCGTATTGAGAACCTCCCTGTTAAGGTGATGATACTGAACAACCA\
ACATCTGGGAATGGTGGTGCAGTGGGAGGACAGGTTTTACAAGGCCAATCGGGCGCACACGTACCTTGGG\
AACCCAGAAAATGAGAGTGAGATATATCCAGATTTTGTGACGATTGCCAAGGGGTTCAATGTTCCTGCTG\
TTCGTGTGACAAAGAAAAGTGAAGTCCGTGCAGCAATCAAGAAGATGCTTGAGACTCCAGGGCCATACTT\
GTTGGATATCATCGTCCCTCACCAGGAGCATGTGCTGCCTATGATCCCCAGCGGTGGTGCTTTCAAGGAC\
ATTATCATGGAGGGCGATGGCA'

ACCASE_PROT = 'NPERGFKYIYLNEEDYGRISSSVIAHKTQLDSGEIRWVIDSVVG\
KEDGLGVENIHGSAAIASAYSRAYEETFTLTFVSGRTVGIGAYLARLGIRCIQRIDQP\
IILTGFSALNKLLGREVYSSHMQLGGPKIMATNGVVHLTVPDDLEGVSNILRWLSYVP\
ANIGGPLPITKSLDPIDRPVAYIPENTCDPRAAISGIXDXQGKWLGGMFDKDSFVETF\
EGWAKTVVTGRAKLGGIPVGVIAVETQTMMQLVPADPGQPDSHERSVPRAGQVWFPDS\
ATKTAQAMLDFNREGLPLFILANWRGFSGGQRDLFEGILQAGSTIVENLRTYNQPAFV\
YIPKAAELRGGAWVVIDSKINPDRIECYAETTAKGNVLEPQGLIEIKFRSEXLQDCMD\
RLDPELVNLKAKLQGAKHEN'

ppo = 'MVIQSITHLSPNLALPSPLSVSTKNYPVAVMGNISEREEPTSAK\
RVAVVGAGVSGLAAAYKLKSHGLSVTLFEADSRAGGKLKTVKKDGFIWDEGANTMTES\
EAEVSSLIDDLGLREKQQLPISQNKRYIARAGLPVLLPSNPAALLTSNILSAKSKLQI\
MLEPFLWRKHNATELSDEHVQESVGEFFERHFGKEFVDYVIDPFVAGTCGGDPQSLSM\
HHTFPEVWNIEKRFGSVFAGLIQSTLLSKKEKGGENASIKKPRVRGSFSFQGGMQTLV\
DTMCKQLGEDELKLQCEVLSLSYNQKGIPSLGNWSVSSMSNNTSEDQSYDAVVVTAPI\
RNVKEMKIMKFGNPFSLDFIPEVTYVPLSVMITAFKKDKVKRPLEGFGVLIPSKEQHN\
GLKTLGTLFSSMMFPDRAPSDMCLFTTFVGGSRNRKLANASTDELKQIVSSDLQQLLG\
TEDEPSFVNHLFWSNAFPLYGHNYDSVLRAIDKMEKDLPGFFYAGNHKGGLSVGKAMA\
SGCKAAELVISYLDSHIYVKMDEKTA'

ppoDNA = 'TGTTGTTGGTGCTGGAGTTAGTGGACTTGCTGCTGCATATAAGCTAAAATCCCATGGTTTGAGTGTGACA\
TTGTTTGAAGCTGATTCTAGAGCTGGAGGCAAACTTAAAACTGTTAAAAAAGATGGTTTTATTTGGGATG\
AGGGGGCAAATACTATGACAGAAAGTGAGGCAGAGGTCTCGAGTTTGATCGATGATCTTGGGCTTCGTGA\
GAAGCAACAGTTGCCAATTTCACAAAATAAAAGATACATAGCTAGAGCCGGTCTTCCTGTGCTACTACCT\
TCAAATCCCGCTGCACTACTCACGAGCAATATCCTTTCAGCAAAATCAAAGCTGCAAATTATGTTGGAAC\
CATTTCTCTGGAGAAAACACAATGCTACTGAACTTTCTGATGAGCATGTTCAGGAAAGCGTTGGTGAATT\
TTTTGAGCGACATTTTGGGAAAGAGTTTGTTGATTATGTTATTGACCCTTTTGTTGCGGGTACATGTGGT\
GGAGATCCTCAATCGCTTTCCATGCACCATACATTTCCAGAAGTATGGAATATTGAAAAAAGGTTTGGCT\
CTGTGTTTGCCGGACTAATTCAATCAACATTGTTATCTAAGAAGGAAAAGGGTGGAGAAAATGCTTCTAT\
TAAGAAGCCTCGTGTACGTGGTTCATTTTCATTTCAAGGTGGAATGCAGACACTTGTTGACACAATGTGC\
AAACAGCTTGGTGAAGATGAACTCAAACTCCAGTGTGAGGTGCTGTCCTTGTCATATAACCAGAAGGGGA\
TCCCCTCACTAGGGAATTGGTCAGTCTCTTCTATGTCAAATAATACCAGTGAAGATCAATCTTATGATGC'

ppoDNAMut = 'TGTTGTTGGTGCTGGAGTTAGTGGACTTGCTGCTGCATATAAGCTAAAATCCCATGGTTTGAGTGTGACA\
TTGTTTGAAGCTGATTCTAGAGCTGGAGGCAAACTTAAAACTGTTAAAAAAGATGGTTTTATTTGGGATG\
AGGGGGCAAATACTATGACAGAAAGTGAGGCAGAGGTCTCGAGTTTGATCGATGATCTTGGGCTTCGTGA\
GAAGCAACAGTTGCCAATTTCACAAAATAAAGGATACATAGCTAGAGCCGGTCTTCCTGTGCTACTACCT\
TCAAATCCCGCTGCACTACTCACGAGCAATATCCTTTCAGCAAAATCAAAGCTGCAAATTATGTTGGAAC\
CATTTCTCTGGAGAAAACACAATGCTACTGAACTTTCTGATGAGCATGTTCAGGAAAGCGTTGGTGAATT\
TTTTGAGCGACATTTTGGGAAAGAGTTTGTTGATTATGTTATTGACCCTTTTGTTGCGGGTACATGT\
GGAGATCCTCAATCGCTTTCCATGCACCATACATTTCCAGAAGTATGGAATATTGAAAAAAGGTTTGGCT\
CTGTGTTTGCCGGACTAATTCAATCAACATTGTTATCTAAGAAGGAAAAGGGTGGAGAAAATGCTTCTAT\
TAAGAAGCCTCGTGTACGTGGTTCATTTTCATTTCAAGGTGGAATGCAGACACTTGTTGACACAATGTGC\
AAACAGCTTGGTGAAGATGAACTCAAACTCCAGTGTGAGGTGCTGTCCTTGTCATATAACCAGAAGGGGA\
TCCCCTCACTAGGGAATTGGTCAGTCTCTTCTATGTCAAATAATACCAGTGAAGATCAATCTTATGATGC'

ppix = resistanceMutationSearch(ppoDNAMut, "PPO")
ppix.determineTarget()

ppix.idCorrectProtein()
print ppix.prot


ppix.detectMutations()
print ppix.mutationsPresent
print ppix.specificMutations

alpha_tub_2muts = 'CAGAGACAGGCGTCTTCGTACTCGCCTCTCTCCGCGACTCCAAGCTTTCTCCCTCCTCCCATTTCCCGTC\
GCCGCCGCCTCACCCGCCCGACACCATGAGGGAGTGCATCTCGATCCACATCGGCCAGGCCGGTATCCAG\
GTCGGAAACGCTTGCTGGGAGCTCTACTGCCTCGAGCATGGCATCCAGGCTGACGGTCAGATGCCCGGTG\
ACAAGACCATTGGAGGAGGTGATGATGCTTTCAACACCTTCTTCAGTGAGACTGGCGCCGGCAAGCATGT\
GCCCCGTGCCGTGTTTGTTGACCTTGAGCCCACTGTGATCGATGAGGTCAGGACTGGCACCTACCGCCAG\
CTGTTTCACCCTGAGCAGCTCATCAGTGGCAAGGAGGATGCTGCCAACAACTTTGCCCGTGGTCACTACA\
CCATTGGCAAGGAGATTGTTGACCTGTGCCTTGACCGCATCAGGAAGCTTGCCGACAACTGTACTGGTCT\
CCAGGGCTTCCTTGTCTTCAACGCTGTCGGTGGAGGAACGGGCTCTGGTCTTGGTTCCCTCCTCCTTGAG\
CGCCTGTCTGTTGACTACGGCAAGAAGTCCAAGCTCGGGTTCACTGTCTACCCGTCTCCTCAGGTCTCCA\
CCTCGGTGGTTGAGCCATACAACAGTGTGCTGTCCACCCACTCCCTCCTTGAGCACACCGATGTGGCTGT\
GCTGCTTGACAACGAGGCCATCTACGACATCTGCCGCCGCTCCCTGGACATTGAGCGCCCAACCTACACC\
AACCTGAACAGGCTTGTTTCTCAGGTCATTTCATCACTGATAGCCTCTCTGAGGTTCGATGGTGCTCTGA\
ACGTGGATGTGAACGAGTTCCAGACCAACTTGGTGCCCTACCCGAGGATCCACTTCACGCTTTCATCCTA\
CGCTCCAGTGATCTCCGCGGAGAAGGCCTACCACGAGCAGCTGTCCGTGGCTGAGATCACCAACAGCGCG\
TTCGAGCCTTCCTCCATGATGGCCAAGTGCGACCCCCGCCACGGCAAGTACATGGCCTGCTGCCTCATGT\
ACCGTGGTGATGTGGTGCCCAAGGACGTGAACGCCGCCGTTGCCACCATCAAGACCAAGCGCACCATCCA\
GTTCGTGGACTGGTGCCCCACTGGCTTCAAGTGCGGTATCAACTACCAGCCACCCAGCGTCGTCCCCGGC\
GGCGACCTGGCCAAGGTGCAGAGGGCCGTGTGCATGATCTCCAACTCCACCAGTGTCGTCGAGGTGTTCT\
CCCGCATCGACCACAAGTTCGACCTCATGTACGCCAAGCGCGCCTTCGTCCACTGGTACGTGGGTGAGGG\
TATGGAGGAGGGTGAGTTCTCCGAGGCGCGTGAGGACCTTGCTGCCCTTGAGAAGGACTACGAGGAGGTC\
GGCGCTGAGTTCGACGAGGGTGAGGAAGGTGATGAGGGTGACGAGTACTAGATGAATCTACCGCTTCCTG\
CTGTTGTGTCAGGCCTGTGTGCCGCTGCTATCCTGTGATCTGCCCGAGGGCGCTATCGTGTCGTGTCAGT\
TTGAACTATTTGTCATTGTGTGGTTACAACCCCTGAAGTTGTAGACATGTTTAATTCCCCGCTTTGCTAC\
TGGGTTATCAACATCGTTATGTTTGTCTAGATTGCTGCCCCTTTGTTTTGTTTCTTTTTTGTGCGTGGTT\
CTTCTCTTTTATC'

tub = resistanceMutationSearch(alpha_tub_2muts, "alpha-tubulin")
tub.determineTarget()

tub.idCorrectProtein()
print tub.prot


tub.detectMutations()
print tub.mutationsPresent
print tub.specificMutations


epsp_test = 'GCGGAGGAGGTGGTGCTGCAGCCCATCAAGGAGATCTCCGGCGTCGTGAAGCTGCCGGGGTCCAAGTCGC\
TCTCCAACCGGATCCTCCTGCTCTCCGCCCTCGCCGAGGTAAGAAGAAGGATCCCCCCTCCCTTTCAGAG\
TCAATTGAAATTGGATGTGGAGATGAGATTTTACCAGGGGTTAGGTGATGATTTCCTGCTGCTGAAATGT\
CTGTGTAGTCATAGGAATATACGGATCAGATGGAGCTCGGTCATTCACTAGTAGGCATTCGTCTCTGTAG\
ATTGTATTCACCTTAATTAAGGCGATTGATGAGGTAGACTGAAAGCAGCAGGGGGATTTGGCTATTTAGC\
GATACTGAATCGTTGGGATGGCATGTGTTCTGTATCAGGGTACTAATTGCAATACGTGCTGAAGGTTCCA\
TCCAGGTTGGAACTTGATCACGAGAGCCCACATTTTAATTGAAAAATGTTGACTGGATTATAGTTTCATG\
TGTCACTGTTTATTTGGCTTCCATTAGTTGGGAAAAACTAGTCGAGGTGGAGCGTGCATTTTTAAACCCT\
TATACCAAGATAAGAAGCAGCCGCCTTCTCCTTTTCGTTTCCTCTTAGAAAGGGGGAATTGGAACATTAG\
ATGAGTAACGGTTGATGCTGTAACCTTTTCTCAGGGAACAACTGTGGTGGATAACCTTTTAAACAGTGAG\
GACGTCCACTACATGCTCGGGGCCCTGAAAACCCTCGGACTCTCTGTGGAAGCGGACAAAGCTGCCAAAA\
GAGCGGTAGTTGTTGGCTGTGGTGGCAAGTTCCCAGTTGAGAAGGATGCGAAAGAGGAGGTGCAGCTCTT\
CTTGGGGAATGCTGGAACTGCAATGCGATCATTGACAGCAGCCGTAACTGCTGCTGGAGGAAATGCAACG\
TGAGTTGGTTTTTCCATCCTCAGAATATGCCCGTGGAACTGAGTAGCGAAATTGTGGTGATATTTCGTGA\
CTTATCGTGCATCTTTTCTGAATTCCAGTTATGTGCTTGATGGAGTGCCAAGAATGCGGGAGAGACCCAT\
TGGCGACTTGGTTGTCGGATTGAAACAGCTTGGTGCAGATGTTGATTGTTTCCTTGGCACTGACTGCCCA\
CCTGTTCGTGTCAAGGGAATCGGAGGGCTACCTGGTGGCAAGGTTAGTTACTAAAACCAGCATGCTACAT\
TCTTCTGTAACCAATTGAAATTTTCTTGTTGAGCTTGTGCATTTCAAAGAAAAAGTCTAGAATATGTGTT\
TTGACTTTATAAACCGCACAGATTGTCATCTCTGACCAGGAATCCATATTTTCAATAAACTCATCAAGTA\
CTATTTGGCTCATCATCTTGCAAGTTATTTGCTCCTTTTGGGCTGGTGTTAGTTTTCTGGTCTCACATTG\
TGTGGGATACCATGAATTAGCTCTTAAAAATGTGTTACTTTCTACAGGTTAAGTTATCTGGTTCTATCAG\
CAGTCAGTACTTGAGTGCCTTGCTGATGGCTGCTCCTTTAGCTCTTGGGGATGTGGAGATTGAAATMATT\
GATAAACTGATCTCCATCCCTTATGTTGAAATGACATTGAGATTGATGGAGCGTTTTGGCGTGAAAGCAG\
AGCATTCTGATAGCTGGGACAGATTCTACATCAAGGGAGGTCAAAAATACAAGTAAGCCAGTCATTTTGT\
TCTCAGCTTACCTTCCTAATCACTGATTTATCCCAGATAAACTGGAGACTGAAATTATTTCAGAAAAAAA\
ACTTAGTATTGATTATGTAAGGTATTTAATCAGCTAGAATATGACCAGTCTGTTGGAGTCATGAAAGCTA\
ACTAAAATAGCTAAGCAATGTCTAGTAAGTCAATCCATTTGGTTATAAATAGAGTTGATAACACCAAAAG\
TAGCAACCATTCTAGGTGAGGACTTCCTGCTGCATGGCATGGGTAGCATTTTTTTTAGGGAAAGGTACCA\
GATTAGTTTCTTTGCACCCCCTTGATGTGAACCCGCWCATGAAGTATCAGGATAACTGTCCTTATTTTGA\
CTTAAAATACTCTCTTAGTCTTGTGTACTCAGATTGGTAGTTCAAACTTACCAGGTCCCCTAAAAATGCC\
TACGTGGAAGGTGATGCCTCAAGTGCGAGCTATTTCTTGGCTGGTGCTGCAATCACTGGAGGGACTGTGA\
CTGTTGAAGGTTGTGGCACCACCAGTCTGCAGGTAGAAATCTGCCAAAATGCTACTTTTGATTCATCTGC\
CATAATACTCACAATAGACATATTTGATTCACCTGCCAATGCCAAGTGATGTGTTAATGAGTGGATACTC\
ATGTAAAGGGGCTAAAATTCTGAAACCAACAATTCTATAAATGACTAAATAAATATGCTTTCTACTTGGT\
CGTATTCGTTGACAAATATGCCTAATGTTGCAGGGTGATGTGAAATTTGCCGAGGTACTCGAGATGATGG\
GAGCGAAGGTTACATGGACTGAAACTAGCGTAACTGTTACCGGTCCACAACGTGAGCCATTTGGGAGGAA\
ACACCTAAAAGCTATTGATGTTAACATGAACAAAATGCCCGATGTCGCCATGACTCTTGCCGTGGTTGCC\
CTATTTGCTGATGGCCCAACTGCTATCAGAGATGGTAAACATCCTCAGCCGAACAATGCCTGACTTCATA\
GCACTTTAAGCTGGTTTTGGCTATGCTTACTGAAACTTCTGTTCTTTAACAGTGGCTTCCTGGAGAGTAA\
AGGAGACCGAGAGGATGGTTGCAATCCGGACTGAGCTAACAAAGGTAAGAATACTTCATAAACCTTTCGT\
TTATTGCCAGATTTGGACATCTCTTTTGCTCTCCTGCCGGCGTTCCATCTTCAGCTGTTCACATGCTGAC\
GGCTATTTACATCTTTCTAGCTGGGAGCGTCGGTCGAGGAAGGACCGGACTACTGCATTATCACACCGCC\
CGAGAAGCTGAACGTAACGGCCATCGACACCTACGATGACCACAGGATGGCCATGGCCTTCTCCCTCGCC\
GCCTGCGCCGACGTGCCTGTGACCATCCGGGACCCCGGCTGCACCCGCAAGACCTTCCCAGACTACTTCG\
ACGTGCTGAGCACTTTCGTCAAGAAC'


ep = resistanceMutationSearch(epsp_test, "EPSPS")
ep.determineTarget()

ep.idCorrectProtein()
print ep.prot


ep.detectMutations()
print ep.mutationsPresent
print ep.specificMutations
#my_seq = Seq(ALSSeq, generic_rna)
#my_prots = my_seq.translate()
#print my_prots

# 
# print len(ALS2)
# 
# align = pairwise2.align.globalxx(ALS, ALS2)
# print align
# 
# print(pairwise2.format_alignment(*align[0]))
# 
# print 'PMIP' in ALS2
# 
# regex = 'Q\wED'
# found= re.search(regex, ALS2)
# if found:
#     print True
#     
#     
# string = "QWED"
# start = ALSPROT.find(string)
# end = (len(string)+1)+start
# print start
# print end
# 
# ALSPROT[start:end]